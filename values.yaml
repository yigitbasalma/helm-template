# Default values for bss.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: yigitbasalma/awsome-app:latest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

labels: {}
  # foo: bar

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

environments: []
  # - name: ENV
  #   value: production

environmentsFrom: []
  # - configMapRef:
  #     name: app-config-map
  #  - secretRef:
  #      name: app-secret

configMaps: {}
  # logback.xml: |
  #   <configuration>
  #      <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
  #          <layout class="ch.qos.logback.classic.PatternLayout">
  #              <Pattern>
  #                  %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
  #              </Pattern>
  #          </layout>
  #      </appender>
  #      <logger name="com.mkyong" level="debug" additivity="false">
  #          <appender-ref ref="CONSOLE"/>
  #      </logger>
  #      <root level="error">
  #          <appender-ref ref="CONSOLE"/>
  #      </root>
  #   </configuration>

service:
  annotations: {}
    # prometheus.io/scrape: "true"
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

probes: {}
  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http

volumes: []
  # - name: logging-config
  #   configMap:
  #     name: app-configs
  #     items:
  #       key: logback.xml
  #       path: logback.xml
  # - name: app-config
  #   configMap:
  #     name: app-configs
  #     items:
  #       key: application-properties
  #       path: application-properties
  # - name: logs-volume
  #   emptyDir: {}

volumeMounts: []
  # - name: logging-config
  #   mountPath: /app/config/logback.xml
  #   subPath: logback.xml
  # - name: app-config
  #   mountPath: /app/config/application-properties
  #   subPath: application-properties
  # - name: logs-volume
  #   mountPath: /app/logs

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
